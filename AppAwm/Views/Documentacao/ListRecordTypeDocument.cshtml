@model X.PagedList.IPagedList<DocumentacaoComplementar>
@using X.PagedList
@using X.Web.PagedList


@if (Model?.Count() > 0)
{
    <table id="tableListDocumentoComplemento" class="display compact">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model[0].Nome)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].Status)
                </th>

                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nome)
                    </td>

                    <td class="@(item.Status ? "green-text": "red-text" )">
                        @(item.Status ? "Ativo" : "Inativo")
                    </td>
                    <td class="right-align">
                        <div class="switch">
                            <label>
                                <span id="tituloDesvincula_@item.Cd_Documentaco_Complementar"> @(item.Vinculado ? "Desvincular" : "Desvinculado")</span>
                                <input type="checkbox" class="vincula" checked="@item.Vinculado" onchange="javasecript:vincularDocumento({cd_documento_complementar:@item.Cd_Documentaco_Complementar, cd_documento_id:@item.Cd_DocumentoComplementar_Id, checked:this.checked});">
                                <span class="lever"></span>
                                <span id="tituloVincula_@item.Cd_Documentaco_Complementar">@(item.Vinculado ? "Vinculado" : "Vincular")</span>
                            </label>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="2">
                    <input type="hidden" value="@Model.PageCount" id="pageCount" />
                    @Html.PagedListPager(Model, page => null, new PagedListRenderOptions
                   {
                       DisplayLinkToIndividualPages = true,
                       DisplayPageCountAndCurrentLocation = false,
                       MaximumPageNumbersToDisplay = 25,
                       LiElementClasses = new string[] { "waves-effect" },
                       PageClasses = new string[] { "btnSearch" },
                       DisplayLinkToNextPage = PagedListDisplayMode.Never,
                       DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
                       DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                   })
                </td>
                <td>
                    <span class="badge text-accent-3 blue-text right"> Total de Registros: @Model.TotalItemCount</span>
                </td>
            </tr>

        </tfoot>
    </table>
}
else
{
    <div class="col row z-depth-3 red white-text center-align" style="height: 50px; border: 1px solid; border-radius: 10px; padding:12px 0px 0px 0px;">
        <div class="col s1 left-align"><i class="material-icons white-text">report_problem</i></div>
        <div class="col s11 center">Nenhuma registro foi localizado.</div>
    </div>

}

<script>
    $(document).ready(function () {

      
        $('#tableListDocumentoComplemento .pagination').attr('id', 'pageItem');

        var paren = $('#tableListDocumentoComplemento .pagination').find('li');

        paren.each(function (index, li) {
            li.id = li.innerText
            li.innerHTML = "<a class='btnSearch'>" + li.innerText + "</a>";
        });

        $('#tableListDocumentoComplemento .btnSearch').click((event) => {
            var obj = {pagina: event.target.innerHTML,  id: $('#cd_documentoComplementar_id').val(), origem: $('#tipoDocumento').val(),  cd_empresa_id:  $('#tipoDocumento').val() == '1' ? $('#cd_empresa').val() : $('#codigoEmpresa').val() };
           getTipoDocumento(obj);
        });

         $('#tableListDocumentoComplemento').DataTable({
            language: {
                url: 'js/pt-br.json',
            },
             pageLength: 17,
            layout: {
                topStart: null,
                bottom: null,
                bottomStart: null,
                bottomEnd: null,
                topEnd: null
            }
        });
    });
</script>