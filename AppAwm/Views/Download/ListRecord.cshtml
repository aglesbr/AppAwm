@model X.PagedList.IPagedList<Download>
@using X.PagedList
@using X.Web.PagedList

@if (Model?.Count() > 0)
{
    <table id="tableList" class="display compact">
        <thead>
            <tr>
                <th>
                    Nome
                </th>
                <th>
                    Descrição
                </th>
                 <th>
                    Enviado por
                </th>
                     <th>
                        Data de criação
                    </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @item.Nome
                    </td>
                    <td>
                         @item.Descricao  
                    </td>
                     <td>
                        @item.Cd_UsuarioCriacao
                    </td>
                    <td>
                        @Convert.ToDateTime(item.Dt_Criacao).ToShortDateString()  
                    </td>
                    
                    <td class="right-align">
                        <a data-position="left" data-tooltip="Download" class="waves-effect waves-light btn-small tooltipped downloadFile" data-itemid="@item.Codigo"><i class="material-icons center">cloud_download</i></a>
                        <a data-position="right" data-tooltip="Excluir" class="waves-effect waves-light btn-small tooltipped red darken-4 removeFile" data-itemid="@item.Codigo"><i class="material-icons center">delete_forever</i></a>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="4">
                    <input type="hidden" value="@Model.PageCount" id="pageCount" />
                    @Html.PagedListPager(Model, page => null, new PagedListRenderOptions
                   {
                       DisplayLinkToIndividualPages = true,
                       DisplayPageCountAndCurrentLocation = false,
                       MaximumPageNumbersToDisplay = 25,
                       LiElementClasses = new string[] { "waves-effect" },
                       PageClasses = new string[] { "btnSearch" },
                       DisplayLinkToNextPage = PagedListDisplayMode.Never,
                       DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
                       DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                   })
                </td>
                <td>
                    <span class="badge text-accent-3 blue-text right"> Total de Registros: @Model.TotalItemCount</span>
                </td>
            </tr>

        </tfoot>
    </table>
}
else
{
    <div class="col row z-depth-3 red white-text center-align" style="height: 50px; border: 1px solid; border-radius: 10px; padding:12px 0px 0px 0px;">
        <div class="col s1 left-align"><i class="material-icons white-text">report_problem</i></div>
        <div class="col s11 center">Nenhuma registro foi localizado.</div>
    </div>

}

<script>

    $(document).ready(function () {

        $('#tableList .tooltipped').tooltip();

        $('#tableList .pagination').attr('id', 'pageItem');

        var paren = $('#tableList .pagination').find('li');

        paren.each(function (index, li) {
            li.id = li.innerText
            li.innerHTML = "<a class='btnSearch'>" + li.innerText + "</a>";
        });

        $('#tableList .btnSearch').click((event) => {
            $("#btnSearch").trigger("click", event.target.innerHTML);
        });


        $('#tableList').DataTable({
            language: {
                url: 'js/pt-br.json',
            },
            "iDisplayLength": 12,
            layout: {
                topStart: null,
                bottom: null,
                bottomStart: null,
                bottomEnd: null,
                topEnd: null,
            }
        });
    });

     $('.downloadFile').on('click', (event) => {
                downloadFile({ id: event.currentTarget.dataset.itemid})
            });

    $('.removeFile').on('click', (event) => {
    
        $.confirm({
            title: 'Você confirma a exclusão deste anexo?',
            content: 'ATENÇÃO: essa ação não poderá ser desfeita!',
            boxWidth: '30%',
            type: 'dark',
            useBootstrap: false,
            buttons: {
                cancelar: function () {},
                confirmar: function () {
                    removeFile({ id: event.currentTarget.dataset.itemid })
                },
                // somethingElse: {
                //     text: 'Something else',
                //     btnClass: 'btn-blue',
                //     keys: ['enter', 'shift'],
                //     action: function () {
                //         $.alert('Something else?');
                //     }
                // }
            }
        });
    });
    
</script>