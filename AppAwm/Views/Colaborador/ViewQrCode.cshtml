@using System.Text.RegularExpressions
@model AppAwm.Models.Cracha


<div style="font-size: 12px; margin-top:0px;">
<div class="col s12 center-align">
    @if (Model.Foto == null)
    {
        <img class="circle responsive-img" src="~/images/user.png" style="height:100px; width:100px; cursor:pointer;" />
    }
    else
    {
        var base64Foto = Convert.ToBase64String(Model.Foto);
        var imgSrcFoto = String.Format("data:image/*;base64,{0}", base64Foto);
        <img class="circle responsive-img" src="@imgSrcFoto" style="height:100px; width:120px; cursor:pointer;" />
    }
</div>

<div class="row">
        <div class="col s2"><b>Nome:</b></div><div class="col s10">@Model.Nome.ToUpper()</div>
</div>
<div class="row">
        <div class="col s2"><b>Cpf:</b></div><div class="col s10">@Regex.Replace(Model.Documento!, @"(\d{3})(\d{3})(\d{3})", @"$1.$2.$3-")</div>
</div>
<div class="row">
        <div class="col s2"> <b>Empresa:</b></div><div class="col s10">@Model.Empresa</div>
</div>
<div class="row">
        <div class="col s2"><b>Cargo:</b></div><div class="col s10">@Model.Cargo</div>
</div>

    <div id="divTreinamento" class="col s12" style="overflow-y:scroll; overflow-x:hidden; height:50px;">
    <ul class="collection with-header">
        <li class="collection-header green-text darken-4 center-align">Treinamentos do Colaborador</li>
        @for (int i = 1; i <= 50; i++)

        {
            <li class="collection-item"><div>Treinamenot @i.ToString()<a href="#!" class="secondary-content"><i class="material-icons">check</i></a></div></li>
        }
    </ul>
</div>
</div>

<script>
    let h = $(document).height()-390 + 'px'
    document.getElementById('divTreinamento').style.height = h;
</script>